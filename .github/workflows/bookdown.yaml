on:
  push:
    branches: master
  schedule:
    # 每周一晚上11点跑任务
    - cron:  '0 23 * * 1'

name: bookdown

env:
  isExtPR: ${{ github.event.pull_request.head.repo.fork == true }}

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (r-${{ matrix.config.r }}) (python-${{ matrix.config.python }})
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-10.15, r: '4.0.5', python: '3.8'}
          - {os: macos-10.15, r: '4.1.0', python: '3.8'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup R
        uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}
          Ncpus: 2

      - name: Cache conda
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yml') }}
          
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.config.python }}
          miniconda-version: "latest"
          activate-environment: 'r-reticulate'
          channel-priority: flexible
          show-channel-urls: true
          environment-file: environment.yml
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

      - name: Install Pandoc
        uses: r-lib/actions/setup-pandoc@v1
        with:
          pandoc-version: '2.11.4'

      - name: Install ghostscript and Others
        run: |
          brew update
          brew install ghostscript imagemagick@6 poppler

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: r-${{ matrix.config.os }}-${{ matrix.config.r }}-${{ hashFiles('DESCRIPTION') }}
          restore-keys: r-${{ matrix.config.os }}-${{ matrix.config.r }}-

      - name: Cache bookdown results
        uses: actions/cache@v2
        with:
          path: _bookdown_files
          key: bookdown-${{ matrix.config.os }}-${{ matrix.config.r }}-${{ hashFiles('**/*Rmd') }}
          restore-keys: bookdown-${{ matrix.config.os }}-${{ matrix.config.r }}-

      - name: Install R Packages
        run: |
          install.packages("renv")
          renv::restore()
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          install.packages("webshot")
          sessionInfo(package = .packages(T))
          webshot::is_phantomjs_installed()
          parallel::detectCores()
        shell: Rscript {0}

      - name: Install TinyTeX
        uses: r-lib/actions/setup-tinytex@v1

      - name: Install LaTeX Packages
        run: |
          tinytex::tlmgr_install(readLines("texlive.txt"))
        shell: Rscript {0}

      - name: Install fonts
        run: |
          library(showtext)
          font_install(source_han_serif(), quiet = TRUE)
          font_install(source_han_sans(), quiet = TRUE)
        shell: Rscript {0}


      - name: Render Book
        id: render-book
        run: |
          res <- bookdown::render_book("index.Rmd")
          cat(sprintf("::set-output name=dir::%s", dirname(res)))
        shell: Rscript {0}

      - name: Deploy book to bookdown.org
        if: github.event_name == 'push'
        env:
          CONNECT_API_KEY: ${{ secrets.RSC_BOOKDOWN_TOKEN }}
          CONTENT_ID: 7672 # 本地部署一次拿到站点 ID
        run: |
          Rscript '_deploy-book.R'
      
      - name: setup rsconnect and create manifest
        run: |
          renv::install("rsconnect")
          book_dir <- "${{ steps.render-book.outputs.dir}}"
          rsconnect::writeManifest(book_dir)
        shell: Rscript {0}

      - name: Deploy to Bookdown
        env:
          NODE_DEBUG: rsc*
        uses: rstudio/actions/connect-publish@main
        with:
          api-key: ${{ secrets.RSC_BETA_TOKEN }}
          url: https://beta.rstudioconnect.com/
          namespace: experimental-beta-
          access-type: all
          dir: ${{ steps.render-book.outputs.dir}}:bookdown-broken

      # - name: Deploy to Github Pages
      #   if: ${{ github.ref == 'refs/heads/master' }}
      #   uses: JamesIves/github-pages-deploy-action@3.7.1
      #   with:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     BRANCH: gh-pages
      #     FOLDER: _book
      #     CLEAN: true
          
      - name: Checkout the gh-pages branch
        uses: actions/checkout@v2
        with:
          ref: gh-pages
          path: book-output

      - name: Deploy to Github Pages
        if: ${{ github.ref == 'refs/heads/master' }}
        run: ./_deploy.sh

      - name: Install npm
        uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: Upload book folder for debug
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: Upload Book
          path: _book

      - name: Deploy to Netlify
        if: contains(env.isExtPR, 'false')
        id: netlify-deploy
        uses: nwtgck/actions-netlify@v1.1
        with:
          publish-dir: './_book'
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message:
            'Deploy from GHA: ${{ github.event.pull_request.title || github.event.head_commit.message }} (${{ github.sha }})'
          enable-pull-request-comment: true
          enable-commit-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 10
