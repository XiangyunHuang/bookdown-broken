on:
  push:
    branches: master
  schedule:
    # 每周一晚上11点跑任务
    - cron:  '0 23 * * 1'

name: bookdown

env:
  isExtPR: ${{ github.event.pull_request.head.repo.fork == true }}

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }}) (${{ matrix.config.python }})
    strategy:
      matrix:
        config:
          - {os: macOS-latest, r: '4.0.4', python: '3.8'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup R
        uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.config.python }}
          miniconda-version: "latest"
          activate-environment: 'r-reticulate'

      - name: Install Python packages
        run: |
          pip3 install -r requirements.txt
          conda env export

      - name: Install Pandoc
        uses: r-lib/actions/setup-pandoc@v1
        with:
          pandoc-version: '2.11.4'

      - name: Install ghostscript and Others
        run: |
          brew install ghostscript

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: r-${{ hashFiles('DESCRIPTION') }}
          restore-keys: r-

      - name: Cache bookdown results
        uses: actions/cache@v1
        with:
          path: _bookdown_files
          key: bookdown-${{ hashFiles('**/*Rmd') }}
          restore-keys: bookdown-

      - name: Install dependencies
        run: |
          install.packages("remotes")
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          install.packages(c("sessioninfo", "webshot", "tinytex"))
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
          webshot::is_phantomjs_installed()
        shell: Rscript {0}

      - name: Install TinyTeX
        uses: r-lib/actions/setup-tinytex@v1

      - name: Install LaTeX Packages
        run: |
          tinytex::tlmgr_install(readLines("texlive.txt"))
          tinytex:::is_tinytex()
        shell: Rscript {0}

      - name: Install packages
        run: |
          install.packages("renv")
          renv::restore()
          library(showtext)
          font_install(source_han_serif(), quiet = TRUE)
          font_install(source_han_sans(), quiet = TRUE)
        shell: Rscript {0}

      - name: Build site
        run: Rscript -e 'bookdown::render_book("index.Rmd", "all")'

      - name: Install npm
        uses: actions/setup-node@v1

      - name: Upload book folder for debug
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: Upload Book
          path: _book

      - name: Deploy to Netlify
        if: contains(env.isExtPR, 'false')
        id: netlify-deploy
        uses: nwtgck/actions-netlify@v1.1
        with:
          publish-dir: './_book'
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message:
            'Deploy from GHA: ${{ github.event.pull_request.title || github.event.head_commit.message }} (${{ github.sha }})'
          enable-pull-request-comment: true
          enable-commit-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 10
